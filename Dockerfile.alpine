FROM python:3.13.2-alpine3.21

ARG BIND=127.0.0.1:8080
ENV BIND=${BIND}
ARG SCRIPTS=scripts/poetry
ENV SCRIPTS=${SCRIPTS}
ARG VERSION=unknown
ENV VERSION=${VERSION}
ARG COMMIT=unknown
ENV COMMIT=${COMMIT}

# gcompat is required for ruff to work
# # go is required for syft
# nodejs is required for pyright to work
# openjdk8 is required for Apache RAT
RUN apk update && apk add --no-cache \
    curl \
    file \
    gcompat \
    git \
    gpg \
    make \
    nix \
    nodejs \
    openjdk8 \
    uv

# Set JAVA_TOOL_OPTIONS to limit memory usage
ENV JAVA_TOOL_OPTIONS="-XX:MaxMetaspaceSize=32m -Xmx128m -XX:+UseSerialGC -XX:MaxRAM=256m -XX:CompressedClassSpaceSize=16m"

ENV PYTHONUNBUFFERED=1
RUN pip3 install setuptools wheel pip-tools poetry
WORKDIR /opt/atr
COPY . /opt/atr
RUN mkdir -p /tmp/apache-rat && \
    cd /tmp/apache-rat && \
    curl -L https://dlcdn.apache.org/creadur/apache-rat-0.16.1/apache-rat-0.16.1-bin.tar.gz -o apache-rat.tar.gz && \
    tar -xzf apache-rat.tar.gz && \
    find apache-rat-0.16.1 -type f -name "*.jar" -exec cp {} . \; && \
    # Rename to match expected filename if needed
    [ -f apache-rat-0.16.1.jar ] || mv $(find . -maxdepth 1 -type f -name "apache-rat*.jar" | head -1) apache-rat-0.16.1.jar
RUN java -version
# TODO: We should pin the syft version
# RUN GOPATH=/usr/local go install github.com/anchore/syft/cmd/syft@latest
RUN curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
RUN sed -i "s%ATR-VERSION%${VERSION}%" atr/templates/includes/footer.html
RUN rm -rf .venv-*
RUN make sync PYTHON="$(which python3)"
EXPOSE 8080

RUN printf '#!/bin/sh\n\
cd /opt/atr\n\
test -d /opt/atr/state || mkdir -p /opt/atr/state\n\
make certs\n\
cp /tmp/apache-rat/apache-rat-0.16.1.jar /opt/atr/state/\n\
echo "Copied Apache RAT JAR to state directory:"\n\
ls -la /opt/atr/state/apache-rat-0.16.1.jar\n\
exec make serve BIND=${BIND}\n\
' > /usr/local/bin/start-atr.sh
RUN chmod +x /usr/local/bin/start-atr.sh
CMD ["/usr/local/bin/start-atr.sh"]
